#%RAML 0.8
title: "La Liga"
version: "1.0"
baseUri: http://localhost:3000/api

protocols: [ HTTP, HTTPS ]

securitySchemes:
  - basic:
      type: Basic Authentication
  - digest_auth:
      type: Digest Authentication
  - oauth_2_0:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private details in a user's GitHub account without getting their password. This is preferred over Basic Authentication because tokens can be limited to specific types of data, and can be revoked by users at any time.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          404:
            description: Unauthorized
      settings:
        authorizationUri: https://leagues.com/login/oauth/authorize
        accessTokenUri: https://leagues.com/login/oauth/access_token
        authorizationGrants: [ code, credentials, owner ]
        scopes:
          - "user"
          - "league"
  - custom_scheme_1:
      type: x-custom
      describedBy:
        headers:
          auth:
            type: string
            required: true
        queryParameters:
          access_token:
            type: string
  - custom_scheme_2:
      type: x-custom
      describedBy:
        headers:
          auth:

resourceTypes:
  - base: {}

traits:
  - filterable: {}

securedBy: [ null, basic, digest_auth, oauth_2_0, custom_scheme_1, custom_scheme_2 ]

/teams:
  type: base
  is: [filterable]
  displayName: Teams
  description: |
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent sagittis ipsum felis, sed aliquam massa egestas vel. Sed scelerisque leo lorem, a gravida enim congue eget. Sed rutrum quis odio vitae sollicitudin. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc pulvinar arcu at diam pharetra finibus. Curabitur malesuada hendrerit odio id consectetur. Etiam felis augue, malesuada ut turpis vel, tincidunt sodales justo. Donec quam eros, accumsan ut elementum et, euismod placerat ligula. Phasellus consequat velit lacus. Aenean vel massa et sapien molestie imperdiet et id ex. Nulla quis suscipit libero.
  post:
    securedBy: [ null, oauth_2_0: { scopes: [ read ] } ]
    description: Delete an item by Code.
    headers:
      header:
        displayName: header
        example: header
      type:
        type: string
        enum: [ Remote, Office ]
    queryParameters:
      startDate:
        displayName: startDate
        type: date
        example: 2014-01-07
      param:
        displayName: param
        example: param
      filter:
        enum:
          - assigned
          - created
          - mentioned
          - subscribed
          - all
    body:
      application/json:
        schema: Items
        example: |
              {
                "items":
                  [
                    {
                      "id":123,
                      "code":"AD-12",
                      "color":"blue",
                      "size":"medium",
                      "description":"Borders in light blue"
                    },
                    {
                      "id":321,
                      "code":"AD-13",
                      "color":"pink",
                      "size":"small",
                      "description":"Borders in red"
                    }
                  ]
                }
      application/x-www-form-urlencoded:
        formParameters:
          code:
            displayName: Code
            description: Code of the item to delete.
            example: "ASX-140"
            type: string
            required: true
            minLength: 3
            maxLength: 12
          department:
            displayName: Department
            type: string
            enum: [Sales, Administration]
            example: Sales
      multipart/form-data:
        formParameters:
          code:
            displayName: Code
            description: Code of the item to delete.
            example: "ASX-140"
            type: string
            required: true
            minLength: 3
            maxLength: 12
          code2:
            displayName: Code 2
            description: Code of the item to delete.
            example: "ASX-140"
            type: string
            required: true
            minLength: 3
            maxLength: 12
          department:
            displayName: Department
            type: string
            enum: [Sales, Administration]
            example: Sales
      application/xml:
        example: |
          <items>
            <id>123</id>
            <code>AD-12</code>
            <color>blue</color>
            <size>medium</size>
            <description>something</description>
          </items>
  get:
    description: |
      *Obtain* information from a collection of teams simultaneously
    headers:
      header:
    queryParameters:
      city:
        description:
          Filter the list of teams by home city.
        type: string
        required: false
        default: BAR
        example: BAR
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "description": "The team is the basic unit for keeping track of a roster of players. With the Team APIs, you can obtain team-related information, like the team name, stats, points, and more.",
                  "name": "Team",
                  "properties": {
                    "homeCity": {
                      "description": "Name of the city to which this team belongs",
                      "type": "string"
                    },
                    "id": {
                      "description": "A three-letter code that identifies the team id",
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the team",
                      "type": "string"
                    },
                    "required": [
                      "id",
                      "name",
                      "homeCity"
                    ],
                    "stadium": {
                      "description": "Name of the stadium",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "name": "Teams",
                "required": true,
                "type": "array"
              }
            example: |
              [{
                "name": "Athletic Bilbao",
                "id": "ATH",
                "homeCity": "Bilbao",
                "stadium": "San Mames"
              },
              {
                "name": "Atletico Madrid",
                "id": "ATL",
                "homeCity": "Madrid",
                "stadium": "Vicente Calderon"
              },
              {
                "name": "Barcelona",
                "id": "BAR",
                "homeCity": "Barcelona",
                "stadium": "Camp Nou"
              },
              {
                "name": "Betis",
                "id": "BET",
                "homeCity": "Seville",
                "stadium": "Benito Villamarin"
              },
              {
                "name": "Espanyol",
                "id": "ESP",
                "homeCity": "Barcelona",
                "stadium": "Cornella-El Prat"
              },
              {
                "name": "Getafe",
                "id": "GET",
                "homeCity": "Getafe",
                "stadium": "Coliseum Alfonso Perez"
              },
              {
                "name": "Granada",
                "id": "GRA",
                "homeCity": "Granada",
                "stadium": "Nuevo Los Carmenes"
              },
              {
                "name": "Levante",
                "id": "LEV",
                "homeCity": "Valencia",
                "stadium": "Ciutat de Valencia"
              },
              {
                "name": "Malaga",
                "id": "MAL",
                "homeCity": "Malaga",
                "stadium": "La Roselda"
              },
              {
                "name": "Mallorca",
                "id": "MAL",
                "homeCity": "Palma",
                "stadium": "Iberostar Stadium"
              },
              {
                "name": "Osasuna",
                "id": "OSA",
                "homeCity": "Pamplona",
                "stadium": "El Sadar"
              },
              {
                "name": "Racing Santander",
                "id": "RAC",
                "homeCity": "Santander",
                "stadium": "El Sardinero"
              },
              {
                "name": "Rayo Vallecano",
                "id": "RAY",
                "homeCity": "Madrid",
                "stadium": "Campo de Vallecas"
              },
              {
                "name": "Real Madrid",
                "id": "RMA",
                "homeCity": "Madrid",
                "stadium": "Santiago Bernabeu"
              },
              {
                "name": "Real Sociedad",
                "id": "RSC",
                "homeCity": "San Sebastian",
                "stadium": "Anoeta"
              },
              {
                "name": "Sevilla",
                "id": "SEV",
                "homeCity": "Seville",
                "stadium": "Ramon Sanchez Pizjuan"
              },
              {
                "name": "Sporting de Gijon",
                "id": "SPG",
                "homeCity": "Gijon",
                "stadium": "El Molinon"
              },
              {
                "name": "Valencia",
                "id": "VAL",
                "homeCity": "Valencia",
                "stadium": "Mestalla"
              },
              {
                "name": "Villareal",
                "id": "VIL",
                "homeCity": "Vila-real",
                "stadium": "El Madrigal"
              },
              {
                "name": "Zaragoza",
                "id": "ZAR",
                "homeCity": "Zaragoza",
                "stadium": "La Romareda"
              }]

  /{teamId}:
    displayName: Team
    description: |
     The team is the basic unit for keeping track of a roster of players that are participating together in La Liga. With the Team APIs, you can obtain team-related information, like the team name, stats, points, and more.
    uriParameters:
      teamId:
        description: |
          Three letter code that identifies the team.
        type: string
        minLength: 3
        maxLength: 3
        example: BAR
    get:
      description: Retrieve team-related information such as the name, the home city, the stadium, current position, and other statistical information about a team.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "name": "Barcelona",
                  "id": "BAR",
                  "homeCity": "Barcelona",
                  "stadium": "Camp Nou",
                  "matches": 24
                }
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "properties": {
                    "homeCity": {
                      "description": "Name of the city to which this team belongs",
                      "type": "string"
                    },
                    "matches": {
                      "description": "The total number of matches that has been played by this team between all seasons",
                      "type": "integer",
                      "minimum": 0
                    },
                    "id": {
                      "description": "A three-letter code that identifies the team id",
                      "maxLength": 3,
                      "minLength": 3,
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the team",
                      "type": "string"
                    },
                    "required": [
                      "id",
                      "name",
                      "homeCity"
                    ],
                    "stadium": {
                      "description": "Name of the stadium",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "name": "Team"
                }
        404:
          description: |
            Unable to find a team with that identifier
    put:
      description: Update team details such as the name of the home stadium, or the name of the team itself.
      body:
        application/json:
          example: |
            {
              "name": "Barcelona",
              "stadium": "Camp Nou"
            }
          schema: |
            {
              "$schema": "http://json-schema.org/draft-03/schema",
              "properties": {
                  "homeCity": {
                    "description": "Name of the city to which this team belongs",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the team",
                    "type": "string"
                  },
                  "stadium": {
                    "description": "Name of the stadium",
                    "type": "string"
                  }
              },
              "type": "object",
              "name": "Team"
            }
      responses:
        204:
          description: |
            The team has been succesfully updated
        404:
          description: |
            Unable to find a team with that identifier
    delete:
      description: Remove a team from the league. Notice that this operation is non-reversible and all data associated with the team, including its statistics will be lost. Use with caution.
      responses:
        204:
          description: |
            The resource has been succesfully removed.
        404:
          description: |
            Unable to find a team with that identifier
/positions:
  displayName: Position Table
  description: |
    Nam lacinia suscipit sapien id consectetur. Sed cursus luctus elit id dictum. Praesent vulputate dui ac nulla vehicula dignissim. Vestibulum iaculis lorem ut arcu ultrices, et dictum velit tincidunt. Sed iaculis turpis vel feugiat interdum. Fusce neque augue, lobortis vel purus mattis, condimentum mollis tortor. Donec ligula est, rutrum ut maximus in, commodo non orci. Nunc dapibus lectus sit amet risus vulputate porta. Aliquam ut ultrices neque. Phasellus ultrices ac nisl eu dignissim. Quisque non magna rhoncus, luctus urna quis, mollis dolor. Integer sit amet elit massa. Morbi molestie sapien ut lorem porta pellentesque.
  get:
    description: Retrieve the current standing for the current season
    responses:
      200:
        body:
          application/json:
            example: |
              [{
                "position": 1,
                "team": "BAR",
                "points": 36,
                "matchesPlayed": 12,
                "matchesWon": 10,
                "matchesDraw": 0,
                "matchesLost": 2,
                "goalsInFavor": 15,
                "goalsAgainst": 6
              },
              {
                "position": 2,
                "team": "RMA",
                "points": 34,
                "matchesPlayed": 12,
                "matchesWon": 11,
                "matchesDraw": 1,
                "matchesLost": 2,
                "goalsInFavor": 14,
                "goalsAgainst": 3
              }]
            schema: |
              {
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "description": "An standing position of a team whitin a tournament",
                  "name": "Position",
                  "properties": {
                      "position": {
                        "description": "Current ranking",
                        "type": "integer"
                      },
                      "team": {
                        "description": "Code of the team in the current position",
                        "type": "string",
                        "maxLength": 3,
                        "minLength": 3
                      },
                      "points": {
                        "description": "Number of points accumulated to date",
                        "type": "integer"
                      },
                      "matchesPlayed": {
                        "description": "Number of matches played to date",
                        "type": "integer"
                      },
                      "matchesWon": {
                        "description": "Number of matches won to date",
                        "type": "integer"
                      },
                      "matchesLost": {
                        "description": "Number of matches lost to date",
                        "type": "integer"
                      },
                      "matchesDraw": {
                        "description": "Number of matches draw to date",
                        "type": "integer"
                      },
                      "goalsInFavor": {
                        "description": "Number of goals scored against other teams",
                        "type": "integer"
                      },
                      "goalsAgainst": {
                        "description": "Number of goals scored by other teams against this team",
                        "type": "integer"
                      }
                  },
                  "type": "object"
                },
                "name": "Positions",
                "required": true,
                "type": "array"
              }

/fixture:
  displayName: Fixture
  description: |
    Sed nec enim mollis, tristique arcu at, ornare eros. Vivamus posuere tortor sit amet ipsum tempus, id vestibulum odio vulputate. Nunc fermentum sed metus sed viverra. Cras at maximus arcu. Donec lobortis faucibus blandit. Nunc et dolor accumsan mauris imperdiet pellentesque. Sed suscipit sem in interdum suscipit. Duis dapibus neque eget libero egestas, ut rutrum nisi congue. Maecenas auctor nec erat sit amet mattis. Morbi vestibulum ante lacus, a tempor risus tristique eu. Mauris euismod metus eget ligula pharetra, vehicula interdum nibh rutrum. Aenean semper turpis sed ligula congue egestas. Donec nec orci in arcu auctor accumsan. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur viverra est urna, vel convallis est hendrerit quis. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.
  get:
    description: Retrieve a list of matches for the current season
    responses:
      200:
        body:
          application/json:
            example: |
              [{
                "homeTeam": "BAR",
                "awayTeam": "RMA",
                "date": "2014-01-12T20:00:00"
              }]
            schema: |
              {
                "$schema": "http://json-schema.org/draft-03/schema",
                "items": {
                  "description": "A match between two teams in the league.",
                  "name": "Match",
                  "properties": {
                    "homeTeam": {
                      "description": "Code of the home team",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    },
                    "awayTeam": {
                      "description": "Code of the away team",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    },
                    "date": {
                      "description": "The date on which the match will be played",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "type": "object"
                },
                "name": "Matches",
                "required": true,
                "type": "array"
              }

  /{homeTeamId}/{awayTeamId}:
    displayName: Match
    uriParameters:
      homeTeamId:
        description: Id of the team that plays in its home stadium
        type: string
        minLength: 3
        maxLength: 3
        example: BAR
      awayTeamId:
        description: Id of the away team
        type: string
        minLength: 3
        maxLength: 3
        example: RMA
    get:
      description: Retrieve details of the match between the two teams
      responses:
        200:
          body:
            application/json:
              example: |
                [{
                  "homeTeam": "BAR",
                  "awayTeam": "RMA",
                  "date": "2014-01-12T20:00:00",
                  "homeTeamScore": 3,
                  "awayTeamScore": 0,
                }]
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "properties": {
                    "homeTeam": {
                      "description": "Code of the home team",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    },
                    "awayTeam": {
                      "description": "Code of the away team",
                      "type": "string",
                      "maxLength": 3,
                      "minLength": 3
                    },
                    "date": {
                      "description": "The date on which the match will be played",
                      "type": "string",
                      "format": "date-time"
                    },
                    "homeTeamScore": {
                      "description": "Goals scored by the home team",
                      "type": "integer"
                    },
                    "awayTeamScore": {
                      "description": "Goals scored by the away tam",
                      "type": "integer"
                    }
                  },
                  "required": true,
                  "type": "object"
                }
    put:
      description: Update match results. Can only be done after the game has ended.
      body:
        application/json:
            example: |
              {
                "homeTeamScore": 3,
                "awayTeamScore": 0
              }
            schema: |
              {
                "$schema": "http://json-schema.org/draft-03/schema",
                "properties": {
                  "homeTeamScore": {
                    "description": "Goals scored by the home team",
                    "type": "integer"
                  },
                  "awayTeamScore": {
                    "description": "Goals scored by the away tam",
                    "type": "integer"
                  }
                },
                "required": true,
                "type": "object"
              }

      responses:
        204:
          description: |
            Match successfully updated
        404:
          description: |
            The match cannot be found
        409:
          description: |
            Cannot update match before the match is actually played.
